-- Analyzing PEDAL sales data between 2023 & 2024

-- Cleaning up negative values

UPDATE sales
SET Quantity = ABS(CAST(Quantity AS INTEGER))
WHERE CAST(Quantity AS INTEGER) < 0;

-- How much money did PEDAL make off of credits in 2024 compared to 2023

WITH _23revenue AS (
    SELECT 
        '2023' AS Year,
        ROUND(SUM(NetSales)) AS Total_Revenue
    FROM sales 
    WHERE ProductType LIKE('%Credit%')
    AND STRFTIME('%Y', Date) = '2023'
),     
_24revnue AS (
    SELECT 
        '2024' AS Year,
        ROUND(SUM(NetSales)) AS Total_Revenue
    FROM sales
    WHERE ProductType LIKE('%Credit%')
    AND STRFTIME('%Y', Date) ='2024'
)
SELECT 
    Year,
    Total_Revenue
FROM _23revenue 

UNION ALL 

SELECT 
    Year,
    Total_Revenue
FROM _24revnue
;

-- How much of an increase was there

WITH _23revenue AS (
    SELECT 
        '2023' AS Year_2023,
        ROUND(SUM(NetSales)) AS Total_Revenue1
    FROM sales 
    WHERE ProductType LIKE('%Credit%')
    AND STRFTIME('%Y', Date) = '2023'
),     
_24revnue AS (
    SELECT 
        '2024' AS Year_2024,
        ROUND(SUM(NetSales)) AS Total_Revenue2
    FROM sales
    WHERE ProductType LIKE('%Credit%')
    AND STRFTIME('%Y', Date) ='2024'
)
SELECT 
    Total_Revenue1 AS Revenue_2023,
    Total_Revenue2 AS Revenue_2024,
    ROUND(((Total_Revenue2 - Total_Revenue1) * 100) / Total_Revenue1, 2) AS Percentage_Increase
FROM _23revenue, _24revnue
;

-- What were the top selling credits by Quantity in 2023 and 2024 

WITH top_selling_2023 AS (
    SELECT 
        '2023' AS Year,
        Product,
        SUM(Quantity) AS Quantity,
        ROUND(SUM(NetSales)) AS Revenue_Total
    FROM sales
    WHERE STRFTIME('%Y', Date) = '2023'
    AND ProductType = 'Credits'
    AND Product NOT IN('Late Cancel Fee', 'No Show Fee')
    GROUP BY Product
    ORDER BY SUM(Quantity) DESC
    LIMIT 5
),
top_selling_2024 AS (
    SELECT 
        '2024' AS Year,
        Product,
        SUM(Quantity) AS Quantity,
        ROUND(SUM(NetSales)) AS Revenue_Total
    FROM sales
    WHERE STRFTIME('%Y', Date) ='2024'
    AND ProductType = 'Credits'
    AND Product NOT IN('Late Cancel Fee', 'No Show Fee')
    GROUP BY Product
    ORDER BY SUM(Quantity) DESC
    LIMIT 5
)
SELECT  
    Year,
    Product,
    Quantity,
    Revenue_Total
FROM top_selling_2023

UNION ALL

SELECT  
    Year,
    Product,
    Quantity,
    Revenue_Total
FROM top_selling_2024
;
    
-- What were the top selling credits by Revenue in 2023 and 2024 

WITH top_selling_2023 AS (
    SELECT 
        '2023' AS Year,
        Product,
        SUM(Quantity) AS Quantity,
        ROUND(SUM(NetSales)) AS Revenue_Total
    FROM sales
    WHERE STRFTIME('%Y', Date) = '2023'
    AND ProductType = 'Credits'
    AND Product NOT IN('Late Cancel Fee', 'No Show Fee')
    GROUP BY Product
    ORDER BY ROUND(SUM(NetSales)) DESC
    LIMIT 10
),
top_selling_2024 AS (
    SELECT 
        '2024' AS Year,
        Product,
        SUM(Quantity) AS Quantity,
        ROUND(SUM(NetSales)) AS Revenue_Total
    FROM sales
    WHERE STRFTIME('%Y', Date) ='2024'
    AND ProductType = 'Credits'
    AND Product NOT IN('Late Cancel Fee', 'No Show Fee')
    GROUP BY Product
    ORDER BY ROUND(SUM(NetSales)) DESC
    LIMIT 10
)
SELECT  
    Year,
    Product,
    Quantity,
    Revenue_Total
FROM top_selling_2023

UNION ALL

SELECT  
    Year,
    Product,
    Quantity,
    Revenue_Total
FROM top_selling_2024
;

-- How much money did PEDAL each month in 2023 and 2024

WITH _2023_breakdown AS (
    SELECT 
        STRFTIME('%m', Date) AS Month,
        ROUND(SUM(NetSales)) AS Monthly_Earnings
    FROM sales
    WHERE STRFTIME('%Y', Date) = '2023'
    GROUP BY STRFTIME('%m', Date)
    ORDER BY STRFTIME('%m', Date)
),
_2024_breakdown AS (
    SELECT 
        STRFTIME('%m', Date) AS Month,
        ROUND(SUM(NetSales)) AS Monthly_Earnings
    FROM sales
    WHERE STRFTIME('%Y', Date) = '2024'
    GROUP BY STRFTIME('%m', Date)
    ORDER BY STRFTIME('%m', Date)
)
SELECT 
    y1.Month AS _2023_Months,
    y1.Monthly_Earnings AS _2023_Monthly_Earnings,
    y2.Month AS _2024_Months,
    y2.Monthly_Earnings AS _2024_Monthly_Earnings,
    ROUND(((y2.Monthly_Earnings - y1.Monthly_Earnings) * 100 / y1.Monthly_Earnings)) AS Percentage_Increase
FROM _2023_breakdown AS y1
FULL OUTER JOIN _2024_breakdown AS y2
    ON y1.Month = y2.Month 
;
